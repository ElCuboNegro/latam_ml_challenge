name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
      - feature/*

jobs:

  build-test-deploy:
    runs-on: ubuntu-latest
    steps: 
      # step 1: Checkout
      - name: Checkout repository
        uses: actions/checkout@v3

      # step 2: Cache pip
      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # Step 3: Python
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Paso 4: Instalar dependencias de pruebas
      - name: Install dependencies for testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      # Paso 5: Ejecutar tests
      - name: Run Model Tests
        run: |
          pytest --cov=challenge --cov-report=term --cov-report=html:reports/html --cov-report=xml:reports/coverage.xml tests/model/test_model.py

      - name: Run API Tests
        run: |
          pytest --cov-config=.coveragerc --cov-report term --cov-report html:reports/html --cov-report xml:reports/coverage.xml --junitxml=reports/junit.xml --cov=challenge tests/api/test_api.py

     # Paso 6: Configurar Google Cloud SDK
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true
      
      # Paso 7: Configurar Docker para Artifact Registry
      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev
      # Paso 8: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }} .

      # Paso 9: Push de la imagen a Artifact Registry
      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }}


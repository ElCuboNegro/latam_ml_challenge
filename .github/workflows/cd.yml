name: CD Pipeline

on:
  pull_request:
    branches:
      - main

jobs:
  deploy-and-stress-test:
    if: ${{ github.event.pull_request.head.repo.full_name == github.repository }}
    runs-on: ubuntu-latest
    steps:
      # Paso 1: Checkout
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.sha }}

      # Paso 2: Configurar Google Cloud SDK
      - name: Setup Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          export_default_credentials: true

      # Paso 3: Configurar Docker para Artifact Registry
      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev

      # Paso 4: Construir la imagen Docker
      - name: Build Docker image
        run: |
          docker build -t us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }} .

      # Paso 5: Push de la imagen a Artifact Registry
      - name: Push Docker image
        run: |
          docker push us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }}

      # Paso 6: Desplegar en Cloud Run (Ambiente de Pruebas)
      - name: Deploy to Cloud Run (Testing Environment)
        run: |
          REGION=us-central1
          SERVICE=latam-ml-challenge-pr-${{ github.event.pull_request.number }}

          gcloud run deploy $SERVICE \
            --image us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/latam-ml-challenge-repo/latam-ml-challenge:${{ github.sha }} \
            --region $REGION \
            --platform managed \
            --allow-unauthenticated

      # Paso 7: Ejecutar Stress Tests
      - name: Install dependencies for stress testing
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-test.txt

      - name: Run Stress Tests
        env:
          SERVICE_URL: $(gcloud run services describe latam-ml-challenge-pr-${{ github.event.pull_request.number }} --region us-central1 --format 'value(status.url)')
        run: |
          echo "Running stress tests against $SERVICE_URL"
          pytest tests/stress/test_stress.py --url $SERVICE_URL

      # Paso 8: Destruir el servicio de prueba
      - name: Destroy Test Service
        if: always()
        run: |
          REGION=us-central1
          SERVICE=latam-ml-challenge-pr-${{ github.event.pull_request.number }}
          gcloud run services delete $SERVICE --region $REGION --platform managed --quiet
